---
title: "Hands-on examples on creating flow maps"
output: html_document
date: "2024-02-22"
editor_options: 
  chunk_output_type: console
---

```{r setup}
nyc_flights <- nycflights13::flights |>
  dplyr::filter(
    # discarding since airport location is not available
    !dest %in% c("BQN", "PSE", "SJU", "STT")
  )
airport_locations <- nycflights13::airports |>
  dplyr::filter(faa %in% unique(c(nyc_flights$origin, nyc_flights$dest))) |>
  dplyr::select(id = faa, name, lat, lon)

copy_clip <- function(data) {
  write.table(data, "clipboard-1024", quote = FALSE, sep = ",", row.names = FALSE)
}
```

## Demo 1: Create a flow map visualizing total flight trips originating from New York (NYC)

```{r nyc-flows}
nyc_flows <- nyc_flights |>
  dplyr::count(origin, dest, name = "count")
dplyr::glimpse(nyc_flows)
skimr::skim(nyc_flows)
```

## Demo 2: Create a flow map visualizing total flight trips originating from NYC in May

```{r nyc-flows-may}
nyc_flows_may <- nyc_flights |>
  dplyr::filter(month == 5) |>
  dplyr::count(origin, dest, name = "count")
dplyr::glimpse(nyc_flows_may)
skimr::skim(nyc_flows_may)
```

## Demo 3: Create a flow map visualizing monthly fluctuations in flight trips originating from NYC

```{r nyc-flows-monthly}
nyc_flows_monthly <- nyc_flights |>
  dplyr::mutate(
    time = lubridate::ym(glue::glue("{year}-{month}")),
    time = lubridate::format_ISO8601(time, precision = "ym")
  ) |>
  dplyr::count(origin, dest, time, name = "count") |>
  dplyr::relocate(time, .after = dplyr::last_col())
dplyr::glimpse(nyc_flows_monthly)

nyc_flows_monthly |>
  dplyr::group_by(time) |>
  skimr::skim()
```

## Demo 4: Create a flow map visualizing hourly fluctuations in flight trips originating from NYC on Thanksgiving Eve

```{r nyc-flows-thanksgiving-eve}
nyc_flows_thanksgiving_eve <- nyc_flights |>
  dplyr::filter(month == 11, day == 27) |>
  dplyr::mutate(time_hour = as.character(time_hour)) |>
  dplyr::count(origin, dest, time_hour, name = "count") |>
  dplyr::relocate(time = time_hour, .after = dplyr::last_col())
dplyr::glimpse(nyc_flows_thanksgiving_eve)

nyc_flows_thanksgiving_eve |>
  dplyr::group_by(time) |>
  skimr::skim()
```

## Demo 5: Create a flow map visualizing hourly fluctuations in flight trips originating from NYC on Thanksgiving

```{r nyc-flows-thanksgiving}
nyc_flows_thanksgiving <- nyc_flights |>
  dplyr::filter(month == 11, day == 28) |>
  dplyr::mutate(time_hour = as.character(time_hour)) |>
  dplyr::count(origin, dest, time_hour, name = "count") |>
  dplyr::relocate(time = time_hour, .after = dplyr::last_col())
dplyr::glimpse(nyc_flows_thanksgiving)

nyc_flows_thanksgiving |>
  dplyr::group_by(time) |>
  skimr::skim()
```

## Demo 6: Create a flow map comparing hourly fluctuations in flight trips originating from NYC on Thanksgiving Eve vs. Thanksgiving

```{r nyc-flows-thanksgiving-googlesheet, eval = FALSE}
nyc_flows_thanksgiving_descr <- tibble::tribble(
                       ~property, ~value,
                         "title", "2013 NYC outbound flights around Thanksgiving",
                   "description", "How did travel look on Thanksgiving Eve and Thanksgiving by time of day?",
                   "source.name", "nycflights13 R package",
                    "source.url", "https://github.com/tidyverse/nycflights13",
                "createdBy.name", "Ashirwad Barnwal",
               "createdBy.email", "ashirwad1992@gmail.com",
                 "createdBy.url", "https://www.linkedin.com/in/ashirwad1992/",
            "mapbox.accessToken", NA,
               "mapbox.mapStyle", NA,
                 "colors.scheme", "Default",
               "colors.darkMode", "yes",
                 "animate.flows", "yes",
                    "clustering", "yes",
                  "flows.sheets", "Thanksgiving Eve, Thanksgiving",
  "msg.locationTooltip.incoming", "Inbound trips",
  "msg.locationTooltip.outgoing", "Outbound trips",
  "msg.locationTooltip.internal", "Internal & round trips",
    "msg.flowTooltip.numOfTrips", "Number of trips",
       "msg.totalCount.allTrips", "{0} trips",
   "msg.totalCount.countOfTrips", "{0} of {1} trips"
)

googlesheets4::gs4_create(
  name = "nycflights13-thanksgiving-flowmap",
  sheets = list(
    properties = nyc_flows_thanksgiving_descr, 
    locations = airport_locations,
    `Thanksgiving Eve` = nyc_flows_thanksgiving_eve,
    Thanksgiving = nyc_flows_thanksgiving
  )
)
```
